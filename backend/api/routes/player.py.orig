import logging

from flask.json import jsonify
from flask.views import MethodView

<<<<<<< HEAD
=======
from backend.security.validation import user

from backend.player.import player

player = Player()
#TODO:  This is just done for mocking
player.add_youtube("https://www.youtube.com/watch?v=LBZ-3Ugj1AQ")
player.add_youtube("https://www.youtube.com/watch?v=U5u9glfqDsc")

>>>>>>> Add Routes for play_pause, next, previous
logger = logging.getLogger(__name__)


class PlayerPlayPause(MethodView):

    def get(self):
        """Returns the state of the player.
        """
        return jsonify("{Message: No!}")

    def put(self, state: str, username: str):
        """Sets the state of the player

        Args:
            state: The state which the player should take [play, pause, stop]
            username: This is just for logging purposes
        """
<<<<<<< HEAD
        return jsonify("{Message: No!}")
=======
        if state == "play":
            player.play()
        elif state == "pause":
            player.pause()
        elif state == "stop":
            player.stop()

        return f'PUT /player/play_pause{state}'
>>>>>>> Add Routes for play_pause, next, previous


class PlayerNext(MethodView):

    def get(self):
        """Returns the next song
        """
        return jsonify("{Message: No!}")

    def put(self, username: str):
        """Plays the next song

        Args:
            username: This is just for logging purposes
        """
<<<<<<< HEAD
        return jsonify("{Message: No!}")
=======

        player.next()
        return 'PUT /player/next'
>>>>>>> Add Routes for play_pause, next, previous


class PlayerPrevious(MethodView):

    def get(self):
        """Returns the previous song
        """
        return jsonify("{Message: No!}")

    def put(self, username: str):
        """Plays the previous song

        Args:
            username: This is just for logging purposes
        """
<<<<<<< HEAD
        return jsonify("{Message: No!}")
=======
        player.previous()
        return 'PUT /player/previous'
>>>>>>> Add Routes for play_pause, next, previous


class PlayerShuffle(MethodView):

    def get(self):
        """Returns whether shuffle is on or off
        """
        return jsonify("{Message: No!}")

    def put(self, username: str):
        """Sets shuffle to the opposite value

        Args:
            username: This is just for logging purposes
        """
        return jsonify("{Message: No!}")


class PlayerRepeat(MethodView):

    def get(self):
        """Returns whether repeat is on or off
        """
        return jsonify("{Message: No!}")

    def put(self, username: str):
        """Sets repeat to the opposite value

        Args:
            username: This is just for logging purposes
        """
        return jsonify("{Message: No!}")
